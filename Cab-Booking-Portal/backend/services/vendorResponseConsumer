// backend/services/vendorResponseConsumer.js
const connectRabbitMQ = require('../config/rabbitmq');
const Booking = require('../models/Booking');

async function consumeVendorResponses() {
  try {
    const channel = await connectRabbitMQ();
    const queue = 'vendor_responses';
    await channel.assertQueue(queue, { durable: true });

    channel.consume(queue, async (msg) => {
      if (msg !== null) {
        const response = JSON.parse(msg.content.toString());
        console.log(`Received vendor response: ${response.bookingId} â†’ ${response.status}`);

        // Update booking status in DB
        await Booking.update({ status: response.status }, { where: { bookingId: response.bookingId } });

        channel.ack(msg);
      }
    });

    console.log(`Company backend listening on ${queue}`);
  } catch (error) {
    console.error('Error consuming vendor responses:', error.message);
  }
}

module.exports = consumeVendorResponses;
